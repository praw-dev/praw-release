[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]


[dependency-groups]
dev = [
    "tox-uv>=1.22.1"
]
lint = [
    "ruff>=0.9.5",
]
test = [
    "coverage>=7.6.10",
    "pytest>=8.3.4",
]
type = [
    "pyright>=1.1.393",
    "pytest>=8.3.4",
]


[project]
authors = [
    { name = "Bryce Boe", email = "bbzbryce@gmail.com" }
]
classifiers = ["Private :: Do Not Upload"]
dependencies = [
    "docutils>=0.21.2",
    "packaging>=24.2",
]
description = "Tool to help facilitate prawcore and PRAW releases."
name = "praw-release"
readme = "README.md"
requires-python = ">=3.13"
version = "0.1.0"


[project.scripts]
praw-release = "praw_release:main"


[tool.ruff]
line-length = 120
preview = true


[tool.ruff.lint]
ignore = [
  "D203", # 1 blank line required before class docstring
  "D213", # Multi-line docstring summary should start at the second line
  "E501", # line-length
  "S101", # assert
]
select = [
  "A",   # flake8-builtins
  "ANN", # flake8-annotations
  "ARG", # flake8-unused-arguments
  "B",   # flake8-bugbear
  "BLE", # flake8-blind-except
  "C4",  # flake8-comprehensions
  "D",   # pydocstyle
  "DTZ", # flake8-datetimez
  "E",   # pycodestyle errors
  "EM",  # flake8-errmsg
  "ERA", # eradicate
  "EXE", # flake8-executable
  "F",   # pyflakes
  "FA",  # flake8-future-annotations
  "FIX", # flake8-fix me
  "FLY", # flynt
  "G",   # flake8-logging-format
  "I",   # isort
  "INP", # flake8-no-pep420
  "ISC", # flake8-implicit-str-concat
  "N",   # pep8-naming
  "PIE", # flake8-pie
  "PGH", # pygrep-hooks
  "PL",  # Pylint
  "PT",  # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "PYI", # flake8-pyi
  "Q",   # flake8-quotes
  "RET", # flake8-return
  "RSE", # flake8-raise
  "S",   # bandit
  "SIM", # flake8-simplify
  "T10", # flake8-debugger
  "T20", # flake8-print
  "TCH", # flake8-type-checking
  "TD",  # flake8-todos
  "W",   # pycodestyle warnings
  "UP"   # pyupgrade
]


[tool.ruff.lint.per-file-ignores]
"tests/**.py" = ["D", "INP"]


[tool.tox]
envlist = ["py313", "lint", "type"]
minversion = "4.22"


[tool.tox.env_run_base]
commands = [
    ["coverage", "run", "-m", "pytest", "{posargs}"],
    ["coverage", "report", "-m", "--fail-under=100"]
]
description = "Run test under {base_python}"
dependency_groups = ["test"]
runner = "uv-venv-lock-runner"


[tool.tox.env.lint]
commands = [["ruff", "check"]]
description = "run lint check on code base"
dependency_groups = ["lint"]
runner = "uv-venv-lock-runner"


[tool.tox.env.stylefix]
commands = [["ruff", "check", "--fix"]]
description = "run lint check on code base"
dependency_groups = ["lint"]
runner = "uv-venv-lock-runner"


[tool.tox.env.type]
commands = [["pyright"]]
dependency_groups = ["type"]
description = "run type check on code base"
runner = "uv-venv-lock-runner"
